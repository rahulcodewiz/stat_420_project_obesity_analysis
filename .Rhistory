xlab("NCP")
p6=ggboxplot(obesity, x = "CAEC", y = "Weight",
color = "CAEC", palette = "jco")+
xlab("CAEC")
p7=ggboxplot(obesity, x = "SMOKE", y = "Weight",
color = "SMOKE", palette = "jco")+
xlab("SMOKE")
ggarrange(p1,p2,p3,nrow=3,ncol=1)
ggplot(data = obesity, mapping = aes(x = age, y = ..density..)) +
geom_freqpoly(mapping = aes(colour = SMOKE), binwidth = 500)
ggplot(data = obesity, mapping = aes(x = Age, y = ..density..)) +
geom_freqpoly(mapping = aes(colour = SMOKE), binwidth = 500)
ggplot(data = obesity, mapping = aes(x = Age, y = ..density..)) +
geom_freqpoly(mapping = aes(colour = SMOKE), binwidth = 5000)
ggplot(data = obesity, mapping = aes(x = Age, y = ..density..)) +
geom_freqpoly(mapping = aes(colour = CAEC), binwidth = 5000)
ggplot(data = obesity, mapping = aes(x = Age)) +
geom_freqpoly(mapping = aes(colour = CAEC), binwidth = 5000)
ggplot(data = obesity, mapping = aes(x = Age)) +
geom_freqpoly(mapping = aes(colour = SMOKE), binwidth = 5000)
ggplot(data = obesity, mapping = aes(x = Age)) +
geom_freqpoly(mapping = aes(colour = NCP), binwidth = 5000)
ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight))
p1=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight))
p2=ggplot(data = obesity) +
geom_point(mapping = aes(x = Age, y = Weight))
p3=ggplot(data = obesity) +
geom_point(mapping = aes(x = Age, y = Weight))
ggarrange(p1,p2,p3,nrow=1,ncol=3)
p1=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight))
p2=ggplot(data = obesity) +
geom_point(mapping = aes(x = Age, y = Weight))
p3=ggplot(data = obesity) +
geom_point(mapping = aes(x = Age, y = Height))
ggarrange(p1,p2,p3,nrow=1,ncol=3)
p1=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight))
p2=ggplot(data = obesity) +
geom_point(mapping = aes(x = Weight, y = Age))
p3=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Age))
ggarrange(p1,p2,p3,nrow=1,ncol=3)
p1=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=Gender))+
p2=ggplot(data = obesity) +
geom_point(mapping = aes(x = Weight, y = Age))
p3=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Age))
ggarrange(p1,p2,p3,nrow=1,ncol=3)
p1=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=Gender))
p2=ggplot(data = obesity) +
geom_point(mapping = aes(x = Weight, y = Age))
p3=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Age))
ggarrange(p1,p2,p3,nrow=1,ncol=3)
p1=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=Gender))
p2=ggplot(data = obesity) +
geom_point(mapping = aes(x = Weight, y = Age))
p3=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Age))
ggarrange(p1,p2,p3,nrow=3,ncol=1)
p1=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=Gender))
p2=ggplot(data = obesity) +
geom_point(mapping = aes(x = Weight, y = Age,color=Gender))
p3=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Age,color=Gender))
ggarrange(p1,p2,p3,nrow=3,ncol=1)
library(viridis)
library(hrbrthemes)
obesity=obesity%>%mutate(ageBins = cut(Age, breaks = seq(0,100,by=10)))
p1=ggplot(obesity, aes(fill=Gender, y=Age, x=ageBins)) +
geom_bar(position="dodge", stat="identity")
p2=ggplot(obesity, aes(fill=MTRANS,y=Age, x=ageBins)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
theme_ipsum() +
xlab("")+
ylab("count")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggarrange(p1,p2,nrow=2,ncol=1)
p1=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=NCP))
p2=ggplot(data = obesity) +
geom_point(mapping = aes(x = Weight, y = Age,color=Smoke))
p3=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Age,color=GeFAVCnder))
ggarrange(p1,p2,p3,nrow=3,ncol=1)
p1=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=NCP))
p2=ggplot(data = obesity) +
geom_point(mapping = aes(x = Weight, y = Age,color=SMOKE))
p3=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Age,color=FAVC))
ggarrange(p1,p2,p3,nrow=3,ncol=1)
p1=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=NCP))
p2=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=SMOKE))
p3=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=FAVC))
ggarrange(p1,p2,p3,nrow=3,ncol=1)
p1=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=NCP))
p2=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=SMOKE))
p3=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=FAVC))
p4=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=MTRANS))
ggarrange(p1,p2,p3,nrow=3,ncol=1)
p1=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=NCP))
p2=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=SMOKE))
p3=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=FAVC))
p4=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=MTRANS))
ggarrange(p1,p2,p3,p4nrow=4,ncol=1)
p1=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=NCP))
p2=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=SMOKE))
p3=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=FAVC))
p4=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=MTRANS))
ggarrange(p1,p2,p3,p4,nrow=4,ncol=1)
p1=ggplot(data = obesity) +
geom_point(mapping = aes(x = Weight, y = Height,color=NCP))
p2=ggplot(data = obesity) +
geom_point(mapping = aes(x = Weight, y = Height,color=SMOKE))
p3=ggplot(data = obesity) +
geom_point(mapping = aes(x = Weight, y = Height,color=FAVC))
p4=ggplot(data = obesity) +
geom_point(mapping = aes(x = Weight, y = Height,color=MTRANS))
ggarrange(p1,p2,p3,p4,nrow=4,ncol=1)
p1=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=NCP))
p2=ggplot(data = obesity) +
geom_point(mapping = aes(x = Weight, y = Height,color=SMOKE))
p3=ggplot(data = obesity) +
geom_point(mapping = aes(x = Weight, y = Height,color=FAVC))
p4=ggplot(data = obesity) +
geom_point(mapping = aes(x = Weight, y = Height,color=MTRANS))
ggarrange(p1,p2,p3,p4,nrow=4,ncol=1)
p1=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=NCP))
p2=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=SMOKE))
p3=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=FAVC))
p4=ggplot(data = obesity) +
geom_point(mapping = aes(x = Height, y = Weight,color=MTRANS))
ggarrange(p1,p2,p3,p4,nrow=4,ncol=1)
str(obesity)
p11=ggplot(obesity, aes(x = "Age", y = "Weight",
fill = "family_history_with_overweight", palette = "jco"))+
geom_bar(position="dodge", stat="identity")
p11
p1 = ggboxplot(obesity, x = "family_history_with_overweight", y = "Weight",
color = "family_history_with_overweight", palette = "jco")
p11=ggplot(obesity, aes(x = "ageBins", y = "Weight",
fill = "family_history_with_overweight", palette = "jco"))+
geom_bar(position="dodge", stat="identity")
p2 = ggboxplot(obesity, x = "Gender", y = "Weight",
color = "Gender", palette = "jco")
p3=ggboxplot(obesity, x = "MTRANS", y = "Weight",
color = "MTRANS", palette = "jco")
p4=ggboxplot(obesity, x = "FAVC", y = "Weight",
color = "FAVC", palette = "jco")+
xlab("FAVC")
p5=ggboxplot(obesity, x = "NCP", y = "Weight",
color = "NCP", palette = "jco")+
xlab("NCP")
p6=ggboxplot(obesity, x = "CAEC", y = "Weight",
color = "CAEC", palette = "jco")+
xlab("CAEC")
p7=ggboxplot(obesity, x = "SMOKE", y = "Weight",
color = "SMOKE", palette = "jco")+
xlab("SMOKE")
ggarrange(p1,p2,p3,nrow=3,ncol=1)
p11
library(viridis)
library(hrbrthemes)
obesity=obesity%>%mutate(ageBins = cut(Age, breaks = seq(0,100,by=10)))
p1=ggplot(obesity, aes(fill=Gender, y=Age, x=ageBins)) +
geom_bar(position="dodge", stat="identity")
p11=ggplot(obesity, aes(x = "ageBins", y = "Age",
fill = "family_history_with_overweight", palette = "jco"))+
geom_bar(position="dodge", stat="identity")
p2=ggplot(obesity, aes(fill=MTRANS,y=Age, x=ageBins)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
theme_ipsum() +
xlab("")+
ylab("count")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggarrange(p1,p2,nrow=2,ncol=1)
p11
library(viridis)
library(hrbrthemes)
obesity=obesity%>%mutate(ageBins = cut(Age, breaks = seq(0,100,by=10)))
p1=ggplot(obesity, aes(fill=Gender, y=Age, x=ageBins)) +
geom_bar(position="dodge", stat="identity")
p2=ggplot(obesity, aes(fill=MTRANS,y=Age, x=ageBins)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
theme_ipsum() +
xlab("")+
ylab("count")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggarrange(p1,p2,nrow=2,ncol=1)
library(viridis)
library(hrbrthemes)
obesity=obesity%>%mutate(ageBins = cut(Age, breaks = seq(0,100,by=10)))
p1=ggplot(obesity, aes(fill=Gender, y=Age, x=ageBins)) +
geom_bar(position="dodge", stat="identity")
p2=ggplot(obesity, aes(fill=MTRANS,y=Age, x=ageBins)) +
geom_bar(position="stack", stat="identity") +
scale_fill_viridis(discrete = T) +
theme_ipsum() +
xlab("")+
ylab("count")+
theme(axis.text.x = element_text(angle = 90, vjust = 0.5, hjust=1))
ggarrange(p1,p2,nrow=2,ncol=1)
str(obesity)
options(scipen = 1, digits = 4, width = 80, fig.align = "center")
knitr::opts_chunk$set(echo = TRUE)
library(RWeka)
library(knitr)
library(ggplot2)
library(ggpubr)
library(dplyr)
library(viridis)
library(hrbrthemes)
table(obesity$SCC)
table(obesity$FAF)
table(obesity$TUE)
ggplot(data = obesity)+geom_point(mapping = aes(x = Weight, y =TUE ,color=NCP))
ggplot(data = obesity)+geom_point(mapping = aes(x = TUE, y = Weight,color=NCP))
ggplot(data = obesity)+geom_point(mapping = aes(x = TUE, y = Weight,color=SMOKE))
ggplot(data = obesity)+geom_point(mapping = aes(x = TUE, y = Weight,color=Gender))
ggplot(data = obesity)+geom_point(mapping = aes(x =Weight , y = TUE,color=Gender))
ggplot(data = obesity)+geom_point(mapping = aes(x =Weight , y = TUE,color=FAVC))
ggplot(data = obesity)+geom_point(mapping = aes(x =Weight , y = TUE,color=MTRANS))
ggplot(data = obesity)+geom_point(mapping = aes(x =Weight , y = TUE,color=NCP))
ggplot(data = obesity)+geom_point(mapping = aes(x =Weight , y = TUE,color=CAEC))
ggplot(data = obesity)+geom_point(mapping = aes(x =TUE , y = Weight,color=CAEC))
ggplot(data = obesity)+geom_point(mapping = aes(x =TUE, y = Weight, color=CAEC))
str(obesity)
ggplot(data = obesity)+geom_point(mapping = aes(x =TUE, y = FAF, color=CAEC))
ggplot(data = obesity)+geom_point(mapping = aes(x =TUE, y = FAF, color=Gender))
ggplot(data = obesity)+geom_point(mapping = aes(x=TUE, y=FAF, color=Gender))
ggplot(data = obesity)+geom_point(mapping = aes(x=TUE, y=FAF, color=CAEC))
ggplot(data = obesity)+geom_point(mapping = aes(x=Weight, y=FAF, color=CAEC))
ggplot(data = obesity)+geom_point(mapping = aes(x=Weight, y=FAF, color=NCP))
ggplot(data = obesity)+geom_point(mapping = aes(x=Weight, y=FAF, color=FAVC))
ggplot(data = obesity)+geom_point(mapping = aes(x=Weight, y=FAF, color=FAVC))
ggboxplot(obesity, x = "SCC", y = "Weight",
color = "SCC", palette = "jco")
options(scipen = 1, digits = 4, width = 80, fig.align = "center")
sample_size = 150
set.seed(120)
x1 = rnorm(n = sample_size)
x2 = rnorm(n = sample_size)
x3 = rnorm(n = sample_size)
total_sim=2500
beta_0=0.4
beta_1=-0.35
#' Simulate 1 run of Wald and Likelihood Ratio Tests
run_w_lrt=function(x1,x2,x3){
eta=beta_0+beta_1*x1
p=1/(1+exp(-eta))
y=rbinom(n=sample_size,size=1,prob = p)
m1=glm(y~x1+x2+x3,family=binomial)
m3=glm(y~x1,family=binomial)
p1=coef(summary(m1))[3,"z value"]
p2=anova(m3,m1,test = "LRT")[2,"Deviance"]
c(p1,p2)
}
w_lrt_test=replicate(total_sim,run_w_lrt(x1,x2,x3))
wt_avg=mean(w_lrt_test[1,])
wt_sd= sd(w_lrt_test[1,])
hist(w_lrt_test[1,],xlab = "z value",breaks = 20, main = "", border = "dodgerblue",  freq = FALSE)
curve(dnorm(x,mean=wt_avg,sd=wt_sd), col="darkorange", add = TRUE, lwd = 3)
wt_avg=mean(w_lrt_test[1,])
wt_sd= sd(w_lrt_test[1,])
plot(w_lrt_test[1,],xlab = "z value",breaks = 20, main = "", border = "dodgerblue",  freq = FALSE)
curve(dnorm(x,mean=wt_avg,sd=wt_sd), col="darkorange", add = TRUE, lwd = 3)
wt_avg=mean(w_lrt_test[1,])
wt_sd= sd(w_lrt_test[1,])
hist(w_lrt_test[1,],xlab = "z value",breaks = 20, main = "", border = "dodgerblue",  freq = FALSE)
curve(dnorm(x,mean=wt_avg,sd=wt_sd), col="darkorange", add = TRUE, lwd = 3)
wt_avg=mean(w_lrt_test[1,])
wt_sd= sd(w_lrt_test[1,])
hist(w_lrt_test[1,],xlab = "z value",breaks = 20, main = "", border = "dodgerblue",  freq = FALSE,ylim=c(0,0.4))
curve(dnorm(x,mean=wt_avg,sd=wt_sd), col="darkorange", add = TRUE, lwd = 3)
wt_avg=mean(w_lrt_test[1,])
wt_sd= sd(w_lrt_test[1,])
hist(w_lrt_test[1,],xlab = "z value",breaks = 20, main = "", border = "dodgerblue",  freq = FALSE,ylim=c(0,0.4),xlim=c(-4,4))
curve(dnorm(x,mean=wt_avg,sd=wt_sd), col="darkorange", add = TRUE, lwd = 3)
#Result for the Wald test statistic P[T>1]
mean(w_lrt_test[1,]>1)
#The probability using the true distribution
pnorm(1,mean=wt_avg,sd = wt_sd,lower.tail = FALSE)
hist(w_lrt_test[2,],xlab = "Deviance", main = "", border = "dodgerblue",freq = FALSE, breaks = 30)
curve(dchisq(x,df=2), col = "darkorange", add = TRUE, lwd = 3)
hist(w_lrt_test[2,],xlab = "Deviance", main = "", border = "dodgerblue",freq = FALSE, breaks = 30,ylim=c(0.0,0.5))
curve(dchisq(x,df=2), col = "darkorange", add = TRUE, lwd = 3)
#Result for LRT P[T>5]
mean(w_lrt_test[2,]>5)
#The probability from Chi dist gt 5 at degree of freedom 2
pchisq(5,df=2,lower.tail = FALSE)
sample_size = 10
set.seed(120)
x1 = rnorm(n = sample_size)
x2 = rnorm(n = sample_size)
x3 = rnorm(n = sample_size)
total_sim=2500
beta_0=0.4
beta_1=-0.35
#' Simulate 1 run of Wald and Likelihood Ratio Tests
run_w_lrt=function(x1,x2,x3){
eta=beta_0+beta_1*x1
p=1/(1+exp(-eta))
y=rbinom(n=sample_size,size=1,prob = p)
m1=glm(y~x1+x2+x3,family=binomial)
m3=glm(y~x1,family=binomial)
p1=coef(summary(m1))[3,"z value"]
p2=anova(m3,m1,test = "LRT")[2,"Deviance"]
c(p1,p2)
}
w_lrt_test=replicate(total_sim,run_w_lrt(x1,x2,x3))
wt_avg=mean(w_lrt_test[1,])
wt_sd= sd(w_lrt_test[1,])
hist(w_lrt_test[1,],xlab = "z value",breaks = 20, main = "", border = "dodgerblue",  freq = FALSE)
curve(dnorm(x,mean=wt_avg,sd=wt_sd), col="darkorange", add = TRUE, lwd = 3)
wt_avg=mean(w_lrt_test[1,])
wt_sd= sd(w_lrt_test[1,])
hist(w_lrt_test[1,],xlab = "z value",breaks = 20, main = "", border = "dodgerblue",  freq = FALSE,xlim = c(-2,2))
curve(dnorm(x,mean=wt_avg,sd=wt_sd), col="darkorange", add = TRUE, lwd = 3)
hist(w_lrt_test[2,],xlab = "Deviance", main = "", border = "dodgerblue",freq = FALSE, breaks = 30)
curve(dchisq(x,df=2), col = "darkorange", add = TRUE, lwd = 3)
hist(w_lrt_test[2,],xlab = "Deviance", main = "", border = "dodgerblue",freq = FALSE, breaks = 30,ylim=c(0,0.4s))
hist(w_lrt_test[2,],xlab = "Deviance", main = "", border = "dodgerblue",freq = FALSE, breaks = 30,ylim=c(0,0.4))
curve(dchisq(x,df=2), col = "darkorange", add = TRUE, lwd = 3)
hist(w_lrt_test[2,],xlab = "Deviance", main = "", border = "dodgerblue",freq = FALSE, breaks = 30,ylim=c(0,0.35))
curve(dchisq(x,df=2), col = "darkorange", add = TRUE, lwd = 3)
#Additive model with all available predictors
wisc_model_add_all=glm(class~.,data=wisc_trn, family = binomial)
wisc_trn=read.csv("wisc-train.csv")
wisc_tst=read.csv("wisc-test.csv")
wisc_trn$class=as.factor(wisc_trn$class)
wisc_tst$class=as.factor(wisc_tst$class)
dim(wisc_trn)
dim(wisc_tst)
#Additive model with selected predictors
wisc_model_sel_add=glm(class~radius+smoothness+texture,data=wisc_trn, family = binomial)
#Additive model with all available predictors
wisc_model_add_all=glm(class~.,data=wisc_trn, family = binomial)
#All available predictors as well as their two-way interactions
wisc_model_int_all=glm(class~.^2,data=wisc_trn, family = binomial)
#Run stepwise backward search to find the best model
wisc_model_int_all=step(wisc_model_int_all,direction="backward",trace=0)
library(boot)
set.seed(1)
cv.glm(wisc_trn, wisc_model_sel_add, K = 5)$delta[1]
set.seed(1)
cv.glm(wisc_trn, wisc_model_add_all, K = 5)$delta[1]
set.seed(1)
cv.glm(wisc_trn, wisc_model_int_all, K = 5)$delta[1]
res=mean(ifelse(predict(wisc_model_sel_add,newdata=wisc_tst) > 0, "M", "B") != wisc_tst$class)*100
sprintf("The misclassification rate on test data : %.3f%%",res)
table(wisc_trn$class)
table(wisc_tst$class)
res=mean(ifelse(predict(wisc_model_sel_add,newdata=wisc_tst) > 0, "M", "B") != wisc_tst$class)*100
sprintf("The misclassification rate on test data : %.3f%%",res)
table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst) > 0, "M", "B"), actual = wisc_tst$class)
colors <- c("sensitivity" = "blue", "specificity" = "red")
p1=ggplot(tscores.df,aes(x = cutoff)) +
geom_line(aes(y = sensitivity,color = "sensitivity"))+
geom_line(aes(y = specificity,color = "specificity"))+
labs(x = "Cutoff",
y = "tscores",
color = "Legend") +
scale_color_manual(values = colors)
#Additive model with all available predictors
wisc_model_add_all=glm(class~.,data=wisc_trn, family = binomial)
#' function to calculate sensitivity and specificity for a cutoff probability
get_sens_spec<-function(cutoff){
tst_pred = ifelse(predict(wisc_model_add_all,newdata = wisc_tst,type="response") > cutoff, "M","B")
conf_mat=table(predicted = tst_pred, actual = wisc_tst$class)
sens=conf_mat[2, 2] / sum(conf_mat[, 2])
spec=conf_mat[1, 1] / sum(conf_mat[, 1])
c(sens,spec)
}
tscores=sapply(cutoffs,get_sens_spec)
cutoffs = seq(0.01, 0.99, by = 0.01)
#Additive model with all available predictors
wisc_model_add_all=glm(class~.,data=wisc_trn, family = binomial)
#' function to calculate sensitivity and specificity for a cutoff probability
get_sens_spec<-function(cutoff){
tst_pred = ifelse(predict(wisc_model_add_all,newdata = wisc_tst,type="response") > cutoff, "M","B")
conf_mat=table(predicted = tst_pred, actual = wisc_tst$class)
sens=conf_mat[2, 2] / sum(conf_mat[, 2])
spec=conf_mat[1, 1] / sum(conf_mat[, 1])
c(sens,spec)
}
tscores=sapply(cutoffs,get_sens_spec)
dim(tscores)
names(tscores.df)=c("sensitivity","specificity")
library(ggplot2)
library(ggpubr)
tscores.df=as.data.frame(t(tscores))
names(tscores.df)=c("sensitivity","specificity")
tscores.df$cutoff=cutoffs
colors <- c("sensitivity" = "blue", "specificity" = "red")
p1=ggplot(tscores.df,aes(x = cutoff)) +
geom_line(aes(y = sensitivity,color = "sensitivity"))+
geom_line(aes(y = specificity,color = "specificity"))+
labs(x = "Cutoff",
y = "tscores",
color = "Legend") +
scale_color_manual(values = colors)
p2=ggplot() +
geom_line(data = tscores.df, aes(x = specificity, y = sensitivity), color = "blue") +
xlab('Specificity') +
ylab('Sensitivity')
ggarrange(p2,p1)
table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst) > 0, "M", "B"), actual = wisc_tst$class)
table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") == 1, "M", "B"), actual = wisc_tst$class)
table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") == 1, "M", "B"), actual = wisc_tst$class)
table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") == 1, "M", "B"), actual = wisc_tst$class)
table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.9, "M", "B"), actual = wisc_tst$class)
table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.5, "M", "B"), actual = wisc_tst$class)
table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.1, "M", "B"), actual = wisc_tst$class)
table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0, "M", "B"), actual = wisc_tst$class)
table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.1, "M", "B"), actual = wisc_tst$class)
table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.1, "M", "B"), actual = wisc_tst$class)
table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0, "M", "B"), actual = wisc_tst$class)
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.5, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0, "M", "B"), actual = wisc_tst$class))
#Sensitivity
conf_mat[1,2]/(conf_mat[1,2]+0)
ggplot() +
geom_line(data = tscores.df, aes(x = specificity, y = sensitivity), color = "blue") +
xlab('Specificity') +
ylab('Sensitivity')
colors <- c("sensitivity" = "blue", "specificity" = "red")
p1=ggplot(tscores.df,aes(x = cutoff)) +
geom_line(aes(y = sensitivity,color = "sensitivity"))+
geom_line(aes(y = specificity,color = "specificity"))+
labs(x = "Cutoff",
y = "tscores",
color = "Legend") +
scale_color_manual(values = colors)
p1
#ggplot() + geom_line(data = tscores.df, aes(x = specificity, y = sensitivity), color = "blue") + xlab('Specificity') + ylab('Sensitivity')
#ggarrange(p2,p1)
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.5, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.5, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") ==1, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") == 0, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.5, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") ==1, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") == 0, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.5, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.6, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") == 1, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.5, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.6, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") == 1, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.5, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.6, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.9, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") == 1, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.5, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.6, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.9, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") == 1, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.1, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.5, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.6, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.9, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") == 1, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.1, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.5, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.6, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0.9, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") == 1, "M", "B"), actual = wisc_tst$class))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0, "M", "B"), actual = wisc_tst$class))
table(wisc_tst$class)
table(ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0, "M", "B"))
(conf_mat= table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0, "M", "B"), actual = wisc_tst$class))
table(predicted = ifelse(predict(wisc_model_sel_add,newdata=wisc_tst,type = "response") > 0, "M", "B"), actual = wisc_tst$class)
